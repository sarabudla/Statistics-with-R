names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
nci.data<-NCI60$data
nci.labs<-NCI60$labs
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
# From above output, we can see that the  linkage method works better, as we see that cluster generated by this method
# have a more balanced distribution of the patients.
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
library("multtest")
data("golub")
library("cluster")
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
#(b)
data <- data.frame(golub[1042,])
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
#(c)
#By comparing with patients groups, k-means clustering produces best matches to the groups ALL and AML.
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
quantile(boot.cl[,3],c(0.025, 0.975))
quantile(boot.cl[,4],c(0.025, 0.975))
#(E)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
# the plot shows that there is 30 c
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
cancer <- grep("oncogene", golub.gnames[,2])
cancer
anti <- grep("antigen",golub.gnames[,2])
anti
#(b)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
#(c)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
# Two clustering method does nothing, so both of them are bad
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
#(d)
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
# problem_3
install.packages('ISLR')
plot(comp_link, main = "Complete linkage dendrogram")
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
# according to the clustering results, lung cancer is not grouped into a single cluster
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
# according to the clustering results, lung cancer is not grouped into a single cluster
library("multtest")
data("golub")
library("cluster")
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
# From above output, we can see that the  ward method works better, as we see that cluster generated by this method
# have a more balanced distribution of the patients.
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
#(c)
#By comparing with patients groups, k-means clustering produces best matches to the groups ALL and AML.
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
quantile(boot.cl[,3],c(0.025, 0.975))
quantile(boot.cl[,4],c(0.025, 0.975))
#(E)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
# the plot shows that there is 30 c
# problem_2
#(a)
cancer <- grep("oncogene", golub.gnames[,2])
cancer
anti <- grep("antigen",golub.gnames[,2])
anti
#(b)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
#(c)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
# Two clustering method does nothing, so both of them are bad
#(d)
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
library("multtest")
data("golub")
library("cluster")
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
# From above output, we can see that the  ward method works better, as we see that cluster generated by this method
# have a more balanced distribution of the patients.
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
#(c)
#By comparing with patients groups, k-means clustering produces best matches to the groups ALL and AML.
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
quantile(boot.cl[,3],c(0.025, 0.975))
quantile(boot.cl[,4],c(0.025, 0.975))
#(E)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
# the plot shows that there is 30 c
# problem_2
#(a)
cancer <- grep("oncogene", golub.gnames[,2])
cancer
anti <- grep("antigen",golub.gnames[,2])
anti
#(b)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
#(c)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
# Two clustering method does nothing, so both of them are bad
#(d)
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
# problem_3
install.packages('ISLR')
library("ISLR")
nci.data<-NCI60$data
nci.labs<-NCI60$labs
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
# according to the clustering results, lung cancer is not grouped into a single cluster
install.packages("ISLR")
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
library("multtest")
data("golub")
library("cluster")
#(a)
grep("CCND3 Cyclin D3",golub.gnames[,2])
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
# From above output, we can see that the  ward method works better, as we see that cluster generated by this method
# have a more balanced distribution of the patients.
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
#(c)
#By comparing with patients groups, k-means clustering produces best matches to the groups ALL and AML.
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
quantile(boot.cl[,3],c(0.025, 0.975))
quantile(boot.cl[,4],c(0.025, 0.975))
#(E)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
# the plot shows that there is 30 c
# problem_2
#(a)
cancer <- grep("oncogene", golub.gnames[,2])
cancer
anti <- grep("antigen",golub.gnames[,2])
anti
#(b)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
#(c)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
# Two clustering method does nothing, so both of them are bad
#(d)
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
# problem_3
install.packages('ISLR')
library("ISLR")
nci.data<-NCI60$data
nci.labs<-NCI60$labs
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
k_medoid_clus <- k_medoid$cluster
table(k_medoid_clus, nci.labs)
# according to the clustering results, lung cancer is not grouped into a single cluster
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
single_link <- hclust(dist(data, method="euclidian"), method = "single")
plot(single_link, main = "Single linkage dendrogram", labels=gol.fac)
ward <- hclust(dist(data, method = "euclidian"), method = "ward.D2")
plot(ward, main = "Ward linkage dendrogram", labels=gol.fac)
single_cluster <- cutree(single_link, k=2)
table(single_cluster, gol.fac)
ward_cluster <- cutree(ward, k=2)
table(ward_cluster, gol.fac)
#(b)
data <- data.frame(golub[1042,])
gol.fac <- factor(golub.cl,levels=0:1, labels= c("ALL","AML"))
K_CCND3 <- kmeans(data, centers = 2, nstart=10)
table(K_CCND3$cluster, gol.fac)
#(d)
initial <-K_CCND3$centers
n <- dim(data)[1]; nboot<-1000
boot.cl <- matrix(NA,nrow=nboot,ncol = 4)
for (i in 1:nboot){
dat.star <- data[sample(1:n,replace=TRUE),]
cl <- kmeans(dat.star, initial, nstart = 10)
boot.cl[i,] <- c(cl$centers[1], cl$centers[2])
}
apply(boot.cl,2,mean)
quantile(boot.cl[,1],c(0.025, 0.975))
quantile(boot.cl[,2],c(0.025, 0.975))
quantile(boot.cl[,3],c(0.025, 0.975))
quantile(boot.cl[,4],c(0.025, 0.975))
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
# the plot shows that there is 30 c
# problem_2
#(a)
cancer <- grep("oncogene", golub.gnames[,2])
cancer
anti <- grep("antigen",golub.gnames[,2])
anti
#(b)
data_clus<-rbind(golub[cancer,], golub[anti,])
names <-rep(c("oncogene","antigen"), c(length(cancer), length(anti)))
k_means <- kmeans(data_clus, centers = 2)
k_medoids <-pam(data_clus, k=2)
table(k_means$cluster, names)
table(k_medoids$cluster, names)
#(c)
chisq.test(table(k_means$cluster, names))
chisq.test(table(k_medoids$cluster, names))
#(d)
golub_data <- golub[c(cancer, anti),]
link_single <- hclust(dist(golub_data, method = "euclidian"), method = "single")
comp_link <- hclust(dist(golub_data, method = "euclidian"), method = "complete")
par(mfrow=c(1,2))
plot(link_single, main ="Single linkage dendrogram")
plot(comp_link, main = "Complete linkage dendrogram")
# problem_3
install.packages('ISLR')
library("ISLR")
nci.data<-NCI60$data
nci.labs<-NCI60$labs
#(a)
K<-(1:30); SSE<-rep(NA,length(K))
for (k in K) {
SSE[k]<-kmeans(nci.data, centers=k,nstart = 10)$tot.withinss
}
plot(K, SSE, type='o', xaxt='n'); axis(1, at = K, las=2)
#(b)
k_medoid <- pam(dist(1-cor(t(nci.data))), k=7)
