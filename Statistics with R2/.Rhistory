library("multtest")   # loading required library("multtest")
data(golub)           # loading required dataset
# problem 1
# (a)
gol.fac <- factor(golub.cl, levels=0:1, labels = c("ALL", "AML"))  # Construct a factor shows the tumor class of patients
ALLmean <- apply(golub[,gol.fac=="ALL"], 1, mean)   # selects the matrix with gene expressions of all ALL patients
ALLmean
# (b)
AMLmean<-apply(golub[,gol.fac=="AML"], 1, mean)    # selects the matrix with gene expressions of all AML patients
AMLmean
# (c)
arrangedataALL <- order(ALLmean, decreasing = TRUE)
golub.gnames[arrangedataALL[1:3],2]       # biological names of the three genes with the highest mean expression value among “ALL” patients
# (d)
arrangedataAML<-order(AMLmean, decreasing = TRUE)
golub.gnames[arrangedataAML[1:3],2]      # biological names of the three genes with the highest mean expression value among “AML” patients
# problem 2
# (a)
xAML <- golub[arrangedataAML[1:5]] # expression values of the first five genes for AML patients
write.csv(xAML,file="AML5.csv") # creating AML5.csv file containg first five genes
# (b)
xALL <- golub[arrangedataALL[1:5]] # expression values of the first five genes for ALL patients
write.table(xALL,file="ALL5.txt")  # creating ALL5.csv file containg first five genes
# (C)
std <-golub[100:200,1]
sd(std)               # standard deviation of expressions of 1st patient of 100th to 200th genes
# (d)
datasd <- apply(golub,1,sd) #standard deviation of the expression values of every gene, across all patients
sum(datasd>1)     # finding the genes with standart deviation greater than 1
# (e)
genex<-(golub[101,])
geney<-(golub[102,])
plot(genex,geney,xlab="NUCLEAR PORE COMPLEX PROTEIN NUP214",ylab="PHOSPHATIDYLSERINE SYNTHASE I")
# scatter plot of the 101th gene expressions against the 102th gene expressions
# problem 3
library(ALL) # loading library ALL
data(ALL)  # loading dataset ALL
# (a)
genexp <-c(exprs(ALL[,ALL$BT=="B1"])) # extract the gene expressions from the patients in disease stage B1
hist(genexp)   # constucting gene expressions
# (b)
meanB1<-apply(exprs(ALL[,ALL$BT=="B1"]),1, mean)
meanB1  # calculating mean gene expressions for every gene over B1 patients.
# (c)
ordering<-order(meanB1,decreasing = TRUE)
meanB1[ordering[1:3]] # finding the three genes with the largest mean over B1 patients
# problem 4
data(trees)    # loading dataset trees
changedata <-data.frame(trees)   # converting trees dataset to data frame
plot(changedata$Girth, changedata$Height,xlab="Girth", ylab="Volume & Height", col="blue", pch="+", xlim= c(5.0, 25.0), ylim = c(5.0, 90.0))
points(changedata$Girth, changedata$Volume, col="red", pch="o")
legend("bottomright", c("Height", "Volume"), fill = c("blue","red"), lty=c(0,0))
# constructing Overlaid scatter plot between grith and height, volume
